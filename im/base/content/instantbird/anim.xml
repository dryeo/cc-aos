<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Instantbird messenging client, released
   - 2007.
   -
   - The Initial Developer of the Original Code is
   - Florian QUEZE <florian@instantbird.org>.
   - Portions created by the Initial Developer are Copyright (C) 2007
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->


<!DOCTYPE bindings>

<bindings id="animBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

<!-- inspired from "chrome://global/content/bindings/tabbox.xml#tabbrowser-tabs"> -->

  <binding id="anim" extends="chrome://global/content/bindings/general.xml#image">
    <implementation implements="nsITimerCallback">
     <destructor>
      <![CDATA[
        if (this._animateTimer) {
          this._animateTimer.cancel();
          this._animateTimer = null;
        }
     ]]>
     </destructor>

     <field name="_animateTimer">null</field>
     <field name="_animateStep">24</field>
     <field name="_animateDelay">45</field>
     <field name="_animateDown">true</field>
     <field name="_animatePercents">
      [1.00, 0.85, 0.80, 0.75, 0.71,
       0.68, 0.65, 0.62, 0.59, 0.57,
       0.54, 0.52, 0.50, 0.47, 0.45,
       0.44, 0.42, 0.40, 0.38, 0.37,
       0.35, 0.34, 0.32, 0.31, 0.30]
     </field>

     <method name="notify">
      <parameter name="aTimer"/>
       <body><![CDATA[
         if (!document) {
           aTimer.cancel();
           this._animateTimer = null;
         }
         var percent = this._animatePercents[this._animateStep];
         this.style.opacity = percent;

         if (this._animateDown) {
           if (--this._animateStep < 0) {
             this._animateDown = false;
             this._animateStep = 0;
           }
         }
         else {
           if (++this._animateStep > this._animatePercents.length - 1) {
             this._animateDown = true;
             this._animateStep = this._animatePercents.length - 1;
           }
         }
       ]]></body>
     </method>

     <method name="animate">
      <body><![CDATA[
        const Ci = Components.interfaces;
        this._animateTimer = Components.classes["@mozilla.org/timer;1"]
                                       .createInstance(Ci.nsITimer);
        this._animateTimer.initWithCallback(this, this._animateDelay,
                                            Ci.nsITimer.TYPE_REPEATING_SLACK);
       ]]></body>
     </method>

     <method name="stop">
      <body><![CDATA[
        if (this._animateTimer) {
          this._animateTimer.cancel();
          this._animateTimer = null;
        }
       ]]></body>
     </method>
    </implementation>
  </binding>
</bindings>
